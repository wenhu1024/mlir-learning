module {
  func.func @test_single_nested_loop(%arg0: memref<4xi32>) -> i32 {
    %c1 = arith.constant 1 : index
    %c2 = arith.constant 2 : index
    %c3 = arith.constant 3 : index
    %c0 = arith.constant 0 : index
    %0 = affine.load %arg0[%c0] : memref<4xi32>
    %1 = affine.load %arg0[%c1] : memref<4xi32>
    %2 = arith.addi %0, %1 : i32
    %3 = affine.load %arg0[%c2] : memref<4xi32>
    %4 = arith.addi %2, %3 : i32
    %5 = affine.load %arg0[%c3] : memref<4xi32>
    %6 = arith.addi %4, %5 : i32
    return %6 : i32
  }
}

